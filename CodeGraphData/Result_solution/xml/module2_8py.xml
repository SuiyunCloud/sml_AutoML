<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="module2_8py" kind="file">
    <compoundname>module2.py</compoundname>
    <innernamespace refid="namespacemodule2">module2</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacemodule2" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">对输入的模型自动调参</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">输入：模型（xgboost、rf），参数（经验范围，上下限）</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">输出：<sp/><sp/>1.调完参数的模型</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.以log文件方式展示调参迭代过程</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>math<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ceil</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sklearn<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>metrics</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sklearn.model_selection<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>train_test_split</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sklearn.model_selection<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GridSearchCV</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespacemodule2_1a952bfa729283c6f5a46b54ae6695a430" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemodule2_1a952bfa729283c6f5a46b54ae6695a430" kindref="member">logger_set</ref>():</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>创建一个logger</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:rtype<sp/>:<sp/>loger</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>logging.basicConfig(level=logging.DEBUG,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format=</highlight><highlight class="stringliteral">&apos;%(asctime)s<sp/>%(filename)s[line:%(lineno)d]<sp/>%(levelname)s<sp/>%(message)s&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datefmt=</highlight><highlight class="stringliteral">&apos;%a,<sp/>%d<sp/>%b<sp/>%Y<sp/>%H:%M:%S&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename=</highlight><highlight class="stringliteral">&apos;autoTuning.log&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filemode=</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#################################################################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#定义一个StreamHandler，将INFO级别或更高的日志信息打印到标准错误，并将其添加到当前的日志处理对象#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>console<sp/>=<sp/>logging.StreamHandler()</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>console.setLevel(logging.INFO)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>formatter<sp/>=<sp/>logging.Formatter(</highlight><highlight class="stringliteral">&apos;%(name)-12s:<sp/>%(levelname)-8s<sp/>%(message)s&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>console.setFormatter(formatter)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>logging.getLogger(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).addHandler(console)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>logger<sp/>=<sp/>logging</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">#<sp/>logger.setLevel(logging.DEBUG)<sp/><sp/>#<sp/>Log等级总开关</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">#<sp/>#<sp/>创建一个handler，用于写入日志文件</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">#<sp/>rq<sp/>=<sp/>time.strftime(&apos;%Y%m%d%H%M&apos;,<sp/>time.localtime(time.time()))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">#<sp/>log_path<sp/>=<sp/>os.path.dirname(os.getcwd())<sp/>+<sp/>&apos;/Logs/&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">#<sp/>if<sp/>not<sp/>os.path.exists(log_path):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>os.makedirs(log_path)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">#<sp/>#<sp/>log_name<sp/>=<sp/>log_path<sp/>+<sp/>rq<sp/>+<sp/>&apos;.log&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">#<sp/>log_name<sp/>=<sp/>log_path<sp/>+<sp/>&apos;Logs.log&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">#<sp/>#<sp/>log_name<sp/>=<sp/>&apos;D:/log.log&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">#<sp/>logfile<sp/>=<sp/>log_name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">#<sp/>fh<sp/>=<sp/>logging.FileHandler(logfile,<sp/>mode=&apos;a&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">#<sp/>fh.setLevel(logging.DEBUG)<sp/><sp/>#<sp/>输出到file的log等级的开关</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">#<sp/>#<sp/>定义handler的输出格式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">#<sp/>formatter<sp/>=<sp/>logging.Formatter(&quot;%(asctime)s<sp/>-<sp/>%(filename)s[line:%(lineno)d]<sp/>-<sp/>%(levelname)s:<sp/>%(message)s&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">#<sp/>fh.setFormatter(formatter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">#<sp/>logger.addHandler(fh)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">#<sp/>logger.info(&quot;new<sp/>try&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">#<sp/>#return<sp/>logger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="namespacemodule2_1a17970b5263fb1ce965b102f8e6c2d490" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemodule2_1a17970b5263fb1ce965b102f8e6c2d490" kindref="member">calculater</ref>(base_model,<sp/>params,<sp/>train_data,<sp/>target):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>assert<sp/>isinstance(train_data,<sp/>object)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>train_xy,<sp/>val<sp/>=<sp/>train_test_split(train_data,<sp/>test_size=0.3,<sp/>random_state=1)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>train_xy.Survived</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>X<sp/>=<sp/>train_xy.drop([target],<sp/>axis=1)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>val_y<sp/>=<sp/>val.Survived</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>val_X<sp/>=<sp/>val.drop([target],<sp/>axis=1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch<sp/>=<sp/>GridSearchCV(estimator=base_model,<sp/>param_grid=params,<sp/>scoring=</highlight><highlight class="stringliteral">&apos;roc_auc&apos;</highlight><highlight class="normal">,<sp/>n_jobs=4,<sp/>iid=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>cv=5)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Fit<sp/>the<sp/>algorithm<sp/>on<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch.fit(X,<sp/>y,<sp/>eval_metric=</highlight><highlight class="stringliteral">&apos;auc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>gsearch.fit(X,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Predict<sp/>training<sp/>set:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>dtrain_predictions<sp/>=<sp/>gsearch.predict(val_X)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>dtrain_predprob<sp/>=<sp/>gsearch.predict_proba(val_X)[:,<sp/>1]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>save<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>accuracy<sp/>=<sp/>metrics.accuracy_score(val_y,<sp/>dtrain_predictions)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>auc<sp/>=<sp/>metrics.roc_auc_score(val_y,<sp/>dtrain_predprob)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;params&apos;</highlight><highlight class="normal">:<sp/>params,<sp/></highlight><highlight class="stringliteral">&apos;best_params&apos;</highlight><highlight class="normal">:<sp/>gsearch.best_params_,<sp/></highlight><highlight class="stringliteral">&apos;best_scores&apos;</highlight><highlight class="normal">:<sp/>gsearch.best_score_,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;accuracy&apos;</highlight><highlight class="normal">:<sp/>accuracy,<sp/></highlight><highlight class="stringliteral">&apos;AUC&apos;</highlight><highlight class="normal">:<sp/>auc,<sp/></highlight><highlight class="stringliteral">&apos;gridScore&apos;</highlight><highlight class="normal">:<sp/>gsearch.grid_scores_}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Print<sp/>model<sp/>report:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\nModel<sp/>Report&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\nParams:&quot;</highlight><highlight class="normal">,<sp/>params)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\nbest_params:&quot;</highlight><highlight class="normal">,<sp/>gsearch.best_params_)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\nbest_scores:&quot;</highlight><highlight class="normal">,<sp/>gsearch.best_score_)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Accuracy<sp/>:<sp/>%.4g&quot;</highlight><highlight class="normal"><sp/>%<sp/>accuracy)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;AUC<sp/>Score<sp/>(Train):<sp/>%f&quot;</highlight><highlight class="normal"><sp/>%<sp/>auc)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="namespacemodule2_1a32a6f7dc4e982f0a184ff9aafbd725b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemodule2_1a32a6f7dc4e982f0a184ff9aafbd725b0" kindref="member">createSamples</ref>(input_params,<sp/>samples):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>字符类型参数值用list，数值型用tuple给出最小、最大</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>param_new<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(name,<sp/>val)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>input_params.items():</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(val,<sp/>list):</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_new[name]<sp/>=<sp/>val</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(val,<sp/>tuple):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_val,<sp/>max_val<sp/>=<sp/>val</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>max_val<sp/>&lt;<sp/>min_val:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(min_val,<sp/>max_val)<sp/>=<sp/>(max_val,<sp/>min_val)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>min_val<sp/>&gt;=<sp/>1:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_temp,<sp/>canAdjust<sp/>=<sp/><ref refid="namespacemodule2_1a83b9c674ba1660dc95955f1d979c06ea" kindref="member">intRange</ref>(min_val,<sp/>max_val,<sp/>samples)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>min_val<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;min_val<sp/>is<sp/>{}&apos;</highlight><highlight class="normal">.format(min_val))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;max_val<sp/>is<sp/>{}&quot;</highlight><highlight class="normal">.format(max_val))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>ceil((max_val<sp/>/<sp/>(samples-1))*100)/100</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_temp<sp/>=<sp/>[i*step<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(samples)]</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canAdjust<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>较小值的小数位数应比较大值多</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;min_val<sp/>is<sp/>{}&apos;</highlight><highlight class="normal">.format(min_val))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_str<sp/>=<sp/>str(min_val)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_str<sp/>=<sp/>min_str.split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>len(min_str[1])</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_new<sp/>=<sp/>int(min_val<sp/>*<sp/>pow(10,<sp/>num))</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>max_new<sp/>=<sp/>ceil(max_val/min_val)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_new<sp/>=<sp/>int(max_val<sp/>*<sp/>pow(10,<sp/>num))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_temp,<sp/>canAdjust<sp/>=<sp/><ref refid="namespacemodule2_1a83b9c674ba1660dc95955f1d979c06ea" kindref="member">intRange</ref>(min_new,<sp/>max_new,<sp/>samples)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_temp<sp/>=<sp/>[i<sp/>/<sp/>pow(10,<sp/>num)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>res_temp]</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(res_temp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>res_temp[-1]<sp/>&lt;<sp/>max_val:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_temp.append(max_val)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>res_temp[-1]<sp/>&gt;<sp/>max_val:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_temp[-1]<sp/>=<sp/>max_val</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_new[name]<sp/>=<sp/>res_temp</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>input_params,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param_new,<sp/>canAdjust</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="namespacemodule2_1a83b9c674ba1660dc95955f1d979c06ea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemodule2_1a83b9c674ba1660dc95955f1d979c06ea" kindref="member">intRange</ref>(min,<sp/>max,<sp/>samples):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>-<sp/>min)<sp/>&gt;<sp/>samples:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>ceil((max<sp/>-<sp/>min)<sp/>/<sp/>samples)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_adjust<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples<sp/>=<sp/>max<sp/>-<sp/>min</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_adjust<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[i<sp/>*<sp/>step<sp/>+<sp/>min<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(samples)],<sp/>can_adjust</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="namespacemodule2_1a98daa4f040953810515efc308c2d7c60" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemodule2_1a98daa4f040953810515efc308c2d7c60" kindref="member">is_converge</ref>(res,<sp/>expand=10,<sp/>converge_threshold=0.001):</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>meanScores<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>itera_params<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>row<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>res[</highlight><highlight class="stringliteral">&apos;gridScore&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meanScores.append(row[1])</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itera_params.append(row[0])</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>pd.DataFrame({</highlight><highlight class="stringliteral">&apos;meanScore&apos;</highlight><highlight class="normal">:<sp/>[i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>meanScores],<sp/></highlight><highlight class="stringliteral">&apos;itera_params&apos;</highlight><highlight class="normal">:<sp/>[i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>itera_params]})</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>maxIndex<sp/>=<sp/>data[</highlight><highlight class="stringliteral">&apos;meanScore&apos;</highlight><highlight class="normal">].idxmax(axis=1)<sp/><sp/></highlight><highlight class="comment">#<sp/>最大值索引号</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>itera_params<sp/>=<sp/>data[</highlight><highlight class="stringliteral">&apos;itera_params&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>maxIndex<sp/>&gt;<sp/>0<sp/>&amp;<sp/>maxIndex<sp/>&lt;<sp/>len(meanScores)<sp/>-<sp/>1:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smaller<sp/>=<sp/>meanScores[maxIndex<sp/>-<sp/>1]</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bigger<sp/>=<sp/>meanScores[maxIndex<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg<sp/>=<sp/>(smaller<sp/>+<sp/>bigger)<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>meanScores[maxIndex]</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>max<sp/>-<sp/>avg<sp/>&lt;<sp/>converge_threshold:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>max<sp/>-<sp/>avg<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>meanScores[0]<sp/>!=<sp/>meanScores[len(meanScores)<sp/>-<sp/>1]:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>{}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pass<sp/>#所有值都一样的情况下，两边各扩大</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/><ref refid="namespacemodule2_1a63527da6341bbae7b77fe47e535900f3" kindref="member">expand_both</ref>(itera_params,<sp/>expand)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>{}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/><ref refid="namespacemodule2_1ace5dcd12871e3d471efb1c41f4b6fe5b" kindref="member">combine_dict</ref>(itera_params[maxIndex<sp/>-<sp/>1],<sp/>itera_params[maxIndex<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pass<sp/>#重新分区域，最值在两端点的情况3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>maxIndex<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tem_index<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(meanScores):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v<sp/>&lt;<sp/>meanScores[0]:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tem_index<sp/>=<sp/>i</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tem_index<sp/>==<sp/>len(meanScores)<sp/>-<sp/>1:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/><ref refid="namespacemodule2_1a63527da6341bbae7b77fe47e535900f3" kindref="member">expand_both</ref>(itera_params,<sp/>expand)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>itera_params[0].items():</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itera_params[0][k]<sp/>=<sp/>(v<sp/>/<sp/>expand,<sp/>itera_params[tem_index][k])</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>itera_params[0]</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tem_index<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(meanScores):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v<sp/>&lt;<sp/>meanScores[len(meanScores)<sp/>-<sp/>i]:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tem_index<sp/>=<sp/>len(meanScores)<sp/>-<sp/>i</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tem_index<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/><ref refid="namespacemodule2_1a63527da6341bbae7b77fe47e535900f3" kindref="member">expand_both</ref>(itera_params,<sp/>expand)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>len(meanScores)<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>itera_params[count].items():</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itera_params[0][k]<sp/>=<sp/>(itera_params[tem_index][k],<sp/>v<sp/>*<sp/>expand)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>itera_params[0]</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="namespacemodule2_1a63527da6341bbae7b77fe47e535900f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemodule2_1a63527da6341bbae7b77fe47e535900f3" kindref="member">expand_both</ref>(data,<sp/>expand):</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>data[0].items():</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[0][k]<sp/>=<sp/>(v<sp/>/<sp/>expand,<sp/>data[0][len(data)<sp/>-<sp/>1]<sp/>*<sp/>expand)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[0]</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="namespacemodule2_1ace5dcd12871e3d471efb1c41f4b6fe5b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemodule2_1ace5dcd12871e3d471efb1c41f4b6fe5b" kindref="member">combine_dict</ref>(x,<sp/>y):</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x.items():</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[k]<sp/>=<sp/>(v,<sp/>y[k])</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">#<sp/>def<sp/>compare_boundary(param,label,min_fixed,max_fixed):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="namespacemodule2_1af0e3deeab0189382007cb9a36a9cce83" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemodule2_1af0e3deeab0189382007cb9a36a9cce83" kindref="member">auto_tuning</ref>(model,<sp/>init_param,<sp/>params,<sp/>data,<sp/>target=&apos;Survived&apos;,<sp/>expand=10,samples=10):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>params包含参数的字典，每个参数的值由四维tuple构成，前两位是初始最小、最大，后两位是取值上下极限边界,若上下极限边界值为-1表示不做上下极限限制</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>如：learning_rate:(0.05,0.3,0,1)表示learning_rate初始范围为（0.05,0.3），当在给范围找不到最优结果时，会扩大到（0,1）内</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>model:<sp/>模型</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>init_param:模型的初始值</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>params:<sp/>参数寻优范围列表</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>data:<sp/>训练数据</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>target:训练数据中的目标</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>expand:当初始寻优范围内寻优失败时，扩大边界所乘或除的系数，下边界除以expand，上边界乘expand</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>samples:<sp/>每次迭代寻优时，参数点数</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:训练好的模型</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemodule2_1a952bfa729283c6f5a46b54ae6695a430" kindref="member">logger_set</ref>()</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#logger<sp/>=<sp/>logger_set()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>label<sp/>=<sp/>-1<sp/><sp/></highlight><highlight class="comment">#<sp/>标识参数没有上界或下界限</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>rests<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>param<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>estimator<sp/>=<sp/>model(**init_param)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>params.items():</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param.clear()</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[k]<sp/>=<sp/>(v[0],<sp/>v[1])</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_fixed<sp/>=<sp/>v[2]</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_fixed<sp/>=<sp/>v[3]</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_done<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>is_done:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_new,<sp/>canAdjust<sp/>=<sp/><ref refid="namespacemodule2_1a32a6f7dc4e982f0a184ff9aafbd725b0" kindref="member">createSamples</ref>(param,<sp/>samples)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="namespacemodule2_1a17970b5263fb1ce965b102f8e6c2d490" kindref="member">calculater</ref>(estimator,<sp/>param_new,<sp/>data,<sp/>target)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>logger.info(&apos;hello&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Current<sp/>calculation<sp/>step<sp/>is<sp/>{}&quot;</highlight><highlight class="normal">.format(num))</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(res)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rests.append(res)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#logger.debug(&apos;hello&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>canAdjust:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_done,<sp/>param<sp/>=<sp/><ref refid="namespacemodule2_1a98daa4f040953810515efc308c2d7c60" kindref="member">is_converge</ref>(res,expand)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_done:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>deal<sp/>with<sp/>fixed<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>[i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>param.values()]</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>[i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>param.keys()]</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_val_temp,<sp/>max_val_temp<sp/>=<sp/>temp[0]</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>min_fixed<sp/>==<sp/>label:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>only<sp/>upper<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>max_fixed<sp/>!=<sp/>label:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>max_fixed<sp/>&lt;<sp/>min_val_temp:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_done<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">u&quot;调整后的边界超出设定的上限范围，上限位{}，当前调整范围为：({},{})&quot;</highlight><highlight class="normal">.format(max_fixed,<sp/>min_val_temp,<sp/>max_val_temp))</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>max_fixed<sp/>&lt;<sp/>max_val_temp:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[key[0]]<sp/>=<sp/>(min_val_temp,<sp/>max_fixed)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>max_fixed<sp/>==<sp/>label:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>max_fixed<sp/>&gt;<sp/>max_val_temp:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_done<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">u&quot;调整后的边界超出设定的下限范围，下限位{}，当前调整范围为：({},{})&quot;</highlight><highlight class="normal">.format(min_fixed,<sp/>min_val_temp,<sp/>max_val_temp))</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>min_fixed<sp/>&lt;<sp/>min_val_temp:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[key[0]]<sp/>=<sp/>(min_fixed,<sp/>max_val_temp)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>max_fixed<sp/>&gt;=<sp/>max_val_temp:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>min_fixed<sp/>&gt;<sp/>min_val_temp:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[key[0]]<sp/>=<sp/>(min_fixed,<sp/>max_val_temp)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>min_fixed<sp/>&lt;=<sp/>min_val_temp:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param[key[0]]<sp/>=<sp/>(min_val_temp,<sp/>max_fixed)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_done<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">u&quot;调整后的边界超出设定的上下限范围，上下限位：({},{})，当前调整范围为：({},{})&quot;</highlight><highlight class="normal">.format(min_fixed,<sp/>max_fixed,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_val_temp,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_val_temp))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_done<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>更新参数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(res)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_param.update(res[</highlight><highlight class="stringliteral">&apos;best_params&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>estimator<sp/>=<sp/>model(**init_param)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>estimator</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>xgboost<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>XGBClassifier</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="namespacemodule2_1ab034a5c053db6fae28d124a0eac5207d" refkind="member"><highlight class="normal">__author__<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;suiyun.yang&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">#<sp/>coding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np<sp/><sp/></highlight><highlight class="comment">#<sp/>linear<sp/>algebra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd<sp/><sp/></highlight><highlight class="comment">#<sp/>data<sp/>processing,<sp/>CSV<sp/>file<sp/>I/O<sp/>(e.g.<sp/>pd.read_csv)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>seaborn<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>sns</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>warnings</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="namespacemodule2_1a9daae146f514c5ec6c2a6aea29d85f06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacemodule2_1a9daae146f514c5ec6c2a6aea29d85f06" kindref="member">ignore_warn</ref>(*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">warnings.warn<sp/>=<sp/>ignore_warn<sp/><sp/></highlight><highlight class="comment">#<sp/>ignore<sp/>annoying<sp/>warning<sp/>(from<sp/>sklearn<sp/>and<sp/>seaborn)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>stats</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.stats<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>norm,<sp/>skew<sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>some<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>speedml<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Speedml</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">pd.set_option(</highlight><highlight class="stringliteral">&apos;display.float_format&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/></highlight><highlight class="stringliteral">&apos;{:.3f}&apos;</highlight><highlight class="normal">.format(x))<sp/><sp/></highlight><highlight class="comment">#<sp/>Limiting<sp/>floats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="namespacemodule2_1afff88dd0f9db06d471f873d1a20bacc5" refkind="member"><highlight class="normal">sml<sp/>=<sp/><ref refid="classspeedml_1_1_speedml" kindref="compound">Speedml</ref>(</highlight><highlight class="stringliteral">&quot;D:/train.csv&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D:/test.csv&quot;</highlight><highlight class="normal">,<sp/>target=</highlight><highlight class="stringliteral">&apos;Survived&apos;</highlight><highlight class="normal">,<sp/>uid=</highlight><highlight class="stringliteral">&apos;PassengerId&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="332" refid="namespacemodule2_1a3347685c7aef8a8eb79b05b1c09c33c4" refkind="member"><highlight class="normal">train<sp/>=<sp/>sml.train</highlight></codeline>
<codeline lineno="333" refid="namespacemodule2_1a75362f13fcd83d121a183fb54ca5b05b" refkind="member"><highlight class="normal">test<sp/>=<sp/>sml.test</highlight></codeline>
<codeline lineno="334" refid="namespacemodule2_1a6978f086f6668d16c63532c42f357afc" refkind="member"><highlight class="normal">ntrain<sp/>=<sp/>train.shape[0]</highlight></codeline>
<codeline lineno="335" refid="namespacemodule2_1a0ebc82bf3a7871b08e384d71b7fc8cf9" refkind="member"><highlight class="normal">ntest<sp/>=<sp/>test.shape[0]</highlight></codeline>
<codeline lineno="336" refid="namespacemodule2_1a7a46ec8fc0f9752ed65fa94b8faecc71" refkind="member"><highlight class="normal">data<sp/>=<sp/>train.append(test)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal">sml.eda()</highlight></codeline>
<codeline lineno="339"><highlight class="normal">sml.feature.outliers(</highlight><highlight class="stringliteral">&apos;Fare&apos;</highlight><highlight class="normal">,<sp/>upper=99)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">sml.feature.outliers(</highlight><highlight class="stringliteral">&apos;Parch&apos;</highlight><highlight class="normal">,<sp/>upper=99)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">sml.feature.density([</highlight><highlight class="stringliteral">&apos;Age&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Ticket&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="342"><highlight class="normal">sml.train[[</highlight><highlight class="stringliteral">&apos;Age&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Age_density&apos;</highlight><highlight class="normal">]].head()</highlight></codeline>
<codeline lineno="343"><highlight class="normal">sml.feature.fillna(a=</highlight><highlight class="stringliteral">&apos;Cabin&apos;</highlight><highlight class="normal">,<sp/>new=</highlight><highlight class="stringliteral">&apos;Z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">sml.feature.extract(new=</highlight><highlight class="stringliteral">&apos;Deck&apos;</highlight><highlight class="normal">,<sp/>a=</highlight><highlight class="stringliteral">&apos;Cabin&apos;</highlight><highlight class="normal">,<sp/>regex=</highlight><highlight class="stringliteral">&apos;([A-Z]){1}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">sml.feature.mapping(</highlight><highlight class="stringliteral">&apos;Sex&apos;</highlight><highlight class="normal">,<sp/>{</highlight><highlight class="stringliteral">&apos;male&apos;</highlight><highlight class="normal">:<sp/>0,<sp/></highlight><highlight class="stringliteral">&apos;female&apos;</highlight><highlight class="normal">:<sp/>1})</highlight></codeline>
<codeline lineno="346"><highlight class="normal">sml.feature.sum(new=</highlight><highlight class="stringliteral">&apos;FamilySize&apos;</highlight><highlight class="normal">,<sp/>a=</highlight><highlight class="stringliteral">&apos;Parch&apos;</highlight><highlight class="normal">,<sp/>b=</highlight><highlight class="stringliteral">&apos;SibSp&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">sml.feature.add(</highlight><highlight class="stringliteral">&apos;FamilySize&apos;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">sml.feature.drop([</highlight><highlight class="stringliteral">&apos;Parch&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;SibSp&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="349"><highlight class="normal">sml.feature.impute()</highlight></codeline>
<codeline lineno="350"><highlight class="normal">sml.feature.extract(new=</highlight><highlight class="stringliteral">&apos;Title&apos;</highlight><highlight class="normal">,<sp/>a=</highlight><highlight class="stringliteral">&apos;Name&apos;</highlight><highlight class="normal">,<sp/>regex=</highlight><highlight class="stringliteral">&apos;([A-Za-z]+)\.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">sml.feature.replace(a=</highlight><highlight class="stringliteral">&apos;Title&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="352" refid="namespacemodule2_1a39441c175fc6117e940a4706bc9888e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match=[</highlight><highlight class="stringliteral">&apos;Lady&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Countess&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Capt&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Col&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Don&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Dr&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Major&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Rev&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Sir&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Jonkheer&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Dona&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="353" refid="namespacemodule2_1ac2a00588b38da1a36b6b7eb472a0197c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new=</highlight><highlight class="stringliteral">&apos;Rare&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">sml.feature.replace(</highlight><highlight class="stringliteral">&apos;Title&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Mlle&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Miss&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">sml.feature.replace(</highlight><highlight class="stringliteral">&quot;Title&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Mme&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Mrs&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">sml.feature.drop([</highlight><highlight class="stringliteral">&apos;Name&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Cabin&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Ticket&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="357"><highlight class="normal">sml.feature.labels([</highlight><highlight class="stringliteral">&apos;Title&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Embarked&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Deck&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="358"><highlight class="normal">sml.eda()</highlight></codeline>
<codeline lineno="359"><highlight class="normal">sml.feature.drop([</highlight><highlight class="stringliteral">&apos;Ticket_density&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Age_density&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="360"><highlight class="normal">train<sp/>=<sp/>sml.train</highlight></codeline>
<codeline lineno="361"><highlight class="normal">test<sp/>=<sp/>sml.test</highlight></codeline>
<codeline lineno="362" refid="namespacemodule2_1a52f26cdec3b6bcc6719c7da7cc6f29b0" refkind="member"><highlight class="normal">y_train<sp/>=<sp/>train.Survived</highlight></codeline>
<codeline lineno="363" refid="namespacemodule2_1a0bb075e28f913eab253e054186ca52d5" refkind="member"><highlight class="normal">train_avg<sp/>=<sp/>train.drop(</highlight><highlight class="stringliteral">&apos;Survived&apos;</highlight><highlight class="normal">,<sp/>axis=1)</highlight></codeline>
<codeline lineno="364" refid="namespacemodule2_1ad25578063fd609cdaf97661e717d7c84" refkind="member"><highlight class="normal">test_avg<sp/>=<sp/>test</highlight></codeline>
<codeline lineno="365"><highlight class="normal">train_avg.shape</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sklearn.model_selection<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GridSearchCV</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>warnings</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal">warnings.filterwarnings(</highlight><highlight class="stringliteral">&apos;ignore&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy.stats<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>sns</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>collections<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>defaultdict,<sp/>OrderedDict</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sklearn.ensemble<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GradientBoostingClassifier</highlight></codeline>
<codeline lineno="376" refid="namespacemodule2_1af25b8f47c3c06b5c30d83efd18363d59" refkind="member"><highlight class="normal">param_test3<sp/>=<sp/>OrderedDict()</highlight></codeline>
<codeline lineno="377"><highlight class="normal">param_test3[</highlight><highlight class="stringliteral">&apos;n_estimators&apos;</highlight><highlight class="normal">]=(15,<sp/>200,<sp/>2,<sp/>10000)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">param_test3[</highlight><highlight class="stringliteral">&apos;max_depth&apos;</highlight><highlight class="normal">]=(3,<sp/>10,<sp/>2,<sp/>1000)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">param_test3[</highlight><highlight class="stringliteral">&apos;max_leaf_nodes&apos;</highlight><highlight class="normal">]=(2,<sp/>1000,<sp/>-1,<sp/>-1)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">param_test3[</highlight><highlight class="stringliteral">&apos;min_samples_split&apos;</highlight><highlight class="normal">]=(2,<sp/>1000,<sp/>-1,<sp/>-1)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">param_test3[</highlight><highlight class="stringliteral">&apos;min_samples_leaf&apos;</highlight><highlight class="normal">]=(2,1000,<sp/>1,<sp/>100000)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">param_test3[</highlight><highlight class="stringliteral">&apos;min_weight_fraction_leaf&apos;</highlight><highlight class="normal">]=(0,<sp/>0.5,0,<sp/>0.5)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">#param_test3[&apos;max_features&apos;]=(0.1,<sp/>10,<sp/>0.001,<sp/>100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacespeedml_1_1tuning" kindref="compound">speedml.tuning</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>auto_tuning</highlight></codeline>
<codeline lineno="385" refid="namespacemodule2_1ac5a96f8f4ae1e6c74934954063b4c8ce" refkind="member"><highlight class="normal">estimator<sp/>=<sp/>GradientBoostingClassifier</highlight></codeline>
<codeline lineno="386" refid="namespacemodule2_1afeaf0b81d5a25537633d88c7a3c805db" refkind="member"><highlight class="normal">init_param<sp/>={}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">##init_param<sp/>=<sp/>{<sp/>&apos;n_estimators&apos;:<sp/>15,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;max_depth&apos;:<sp/>5,<sp/>&apos;max_leaf_nodes&apos;:<sp/>0.9,<sp/>&apos;min_samples_split&apos;:<sp/>0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;min_samples_leaf&apos;:<sp/>0.8,<sp/>&apos;min_weight_fraction_leaf&apos;:<sp/>0.8,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;min_weight_fraction_leaf&apos;:<sp/>&apos;binary:logistic&apos;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;max_features&apos;:<sp/>4}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">#if<sp/>__name__<sp/>==<sp/>&quot;__main__&quot;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>gbdt<sp/>=<sp/>auto_tuning(estimator,<sp/>init_param,<sp/>param_test3,<sp/>train)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>lightgbm<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>lgb</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>collections<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>defaultdict,<sp/>OrderedDict</highlight></codeline>
<codeline lineno="397" refid="namespacemodule2_1a3118a836fc62a15c7d748d15d323d054" refkind="member"><highlight class="normal">param_test5<sp/>=<sp/>OrderedDict()</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">#param_test5[&apos;bagging_freq&apos;]=(1,<sp/>50,<sp/>1,<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">#param_test5[&apos;max_depth&apos;]<sp/>=<sp/>(3,<sp/>8,<sp/>2,<sp/>1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">#param_test5[&apos;num_leaves&apos;]<sp/>=<sp/>(20,<sp/>200,<sp/>2,<sp/>10000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">#param_test5[&apos;max_bin&apos;]<sp/>=<sp/>(10,<sp/>255,2,<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">#param_test5[&apos;min_data_in_leaf&apos;]<sp/>=<sp/>(2,<sp/>100,<sp/>-1,<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">#param_test5[&apos;feature_fraction&apos;]<sp/>=<sp/>(0.01,<sp/>1,<sp/>0.0001,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">#param_test5[&apos;bagging_fraction&apos;]<sp/>=<sp/>(0.01,<sp/>1,<sp/>0.0001,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">#param_test5[&apos;lambda_l1&apos;]=(0.0,<sp/>1,<sp/>0,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">#param_test5[&apos;lambda_l2&apos;]=(0.0,<sp/>1,<sp/>0,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">param_test5[</highlight><highlight class="stringliteral">&apos;max_depth&apos;</highlight><highlight class="normal">]=(3,<sp/>8,<sp/>2,<sp/>1000)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">param_test5[</highlight><highlight class="stringliteral">&apos;num_leaves&apos;</highlight><highlight class="normal">]=(20,<sp/>200,<sp/>2,<sp/>10000)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">param_test5[</highlight><highlight class="stringliteral">&apos;max_bin&apos;</highlight><highlight class="normal">]=(10,<sp/>255,2,<sp/>-1)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">param_test5[</highlight><highlight class="stringliteral">&apos;min_data_in_leaf&apos;</highlight><highlight class="normal">]=(2,<sp/>100,<sp/>2,<sp/>-1)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">param_test5[</highlight><highlight class="stringliteral">&apos;feature_fraction&apos;</highlight><highlight class="normal">]=(0.01,<sp/>1,<sp/>0.0001,<sp/>1)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">param_test5[</highlight><highlight class="stringliteral">&apos;bagging_fraction&apos;</highlight><highlight class="normal">]=(0.01,<sp/>1,<sp/>0.0001,<sp/>1)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">param_test5[</highlight><highlight class="stringliteral">&apos;bagging_freq&apos;</highlight><highlight class="normal">]=(2,<sp/>50,2,<sp/>-1)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">param_test5[</highlight><highlight class="stringliteral">&apos;lambda_l1&apos;</highlight><highlight class="normal">]=(0.0,<sp/>1,<sp/>0,<sp/>1)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">param_test5[</highlight><highlight class="stringliteral">&apos;lambda_l2&apos;</highlight><highlight class="normal">]=(0.0,<sp/>1,<sp/>0,<sp/>1)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal">estimator<sp/>=<sp/>lgb.LGBMClassifier</highlight></codeline>
<codeline lineno="420"><highlight class="normal">init_param<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;hello&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="423" refid="namespacemodule2_1a1d4ad39251aa72fbf4a890eb9d71c1fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>xgb<sp/>=<sp/><ref refid="namespacemodule2_1af0e3deeab0189382007cb9a36a9cce83" kindref="member">auto_tuning</ref>(estimator,<sp/>init_param,<sp/>param_test5,<sp/>train)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/programs/Python3.5.2/Lib/site-packages/speedml/test/module2.py"/>
  </compounddef>
</doxygen>
